name: CI Laravel

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: cesizen
          MYSQL_USER: laravel
          MYSQL_PASSWORD: laravel
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -u laravel -plaravel"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Récupérer le code
        uses: actions/checkout@v3

      - name: Configurer PHP et Composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: pdo, pdo_mysql, mbstring

      - name: Installer les dépendances PHP
        run: composer install --no-progress --prefer-dist

      - name: Préparer le fichier .env
        run: |
          cp .env.example .env
          php artisan key:generate

      - name: Attendre que MySQL soit prêt
        run: |
          for i in {1..15}; do
            if mysqladmin ping -h 127.0.0.1 -u laravel -plaravel --silent; then
              echo "MySQL est prêt"
              break
            fi
            echo "⏳ En attente de MySQL..."
            sleep 4
          done

      - name: Lancer les migrations
        run: php artisan migrate --seed

      - name: Lancer les tests
        run: php artisan test || echo "Pas de tests définis"
  deploy:
      needs: laravel-tests
      runs-on: self-hosted
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'

      steps:
        - name: Cloner le dépôt
          uses: actions/checkout@v3

        - name: Copier .env
          run: cp .env.example .env

        - name: Nettoyage des anciens conteneurs
          run: docker compose down || true
          
        - name: Docker Up
          run: docker compose -f docker-compose.yml up -d --build --force-recreate

        - name: Laravel key
          run: docker exec cesizen-back php artisan key:generate

        - name: Migrations
          run: docker exec cesizen-back php artisan migrate --force

        - name: Seeder
          run: docker exec cesizen-back php artisan db:seed --force

        - name: Health check
          run: |
            for i in {1..30}; do
              curl --silent http://localhost:8000 > /dev/null && break
              echo "Attente de Laravel..."
              sleep 2
            done

        - name: Voir les logs Laravel si erreur
          if: failure()
          run: docker exec cesizen-back cat storage/logs/laravel.log || echo "Pas de log Laravel"